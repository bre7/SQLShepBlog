# getwd()
# setwd("/Users/Shep/git/SQLShepBlog/data")
epa <- read.csv("18tstcar.csv",stringsAsFactors=FALSE)
# Set working dir if you download this locally
# getwd()
setwd("/Users/Shep/git/SQLShepBlog/data")
epa <- read.csv("18tstcar.csv",stringsAsFactors=FALSE)
names(epa)[12] <-paste("Cylinders")
names(epa)[46] <-paste("FuelEcon")
colnames(epa)[colnames(epa)=="X..of.Gears"] <- "Gears"
colnames(epa)[colnames(epa)=="Axle.Ratio"] <- "AxleRatio"
epa <- dplyr::rename(epa, HorsePower = "Rated.Horsepower")
epa <- dplyr::rename(epa, Weight = "Equivalent.Test.Weight..lbs..")
epa <- dplyr::rename(epa, Model = "Represented.Test.Veh.Model")
# now that we have a much larger dataset we can do a few visualizations to confirm some prior hypothesis.
ggplot(epa,aes(FuelEcon,Weight))+
geom_point()
library(dplyr)
library(ggplot2)
# now that we have a much larger dataset we can do a few visualizations to confirm some prior hypothesis.
ggplot(epa,aes(FuelEcon,Weight))+
geom_point()
filter(epa,   FuelEcon > 9000)
epa[epa$Test.Vehicle.ID == "184HV863DA" ,]
epa[epa$Test.Vehicle.ID == "184HV863DA" ,c("Represented.Test.Veh.Make","Model","Test.Vehicle.ID","FuelEcon")]
# We will remove anything in the dataframe that is not the specific vehicle id,and which has a mpg of less than 9999.
# For some reason on my machine FuelEcon == 10000.0 is not working, i am not sure why at this moment.
# Lets look at what we have with summary, my daframe has 3509 observations or rows
summary(epa$FuelEcon)
NROW(epa)
epa <- (filter(epa, FuelEcon < 9999))
ggplot(epa,aes(FuelEcon,Weight))+
geom_point()
ggplot(epa, aes(FuelEcon,Weight)) +
geom_point() +
geom_text(data=subset(epa, FuelEcon > 90),aes(FuelEcon,Weight,label=Model), vjust=-.5, hjust=.10)
filter(epa, FuelEcon > 100)
epa[epa$FuelEcon > 100 ,c("Represented.Test.Veh.Make","Model","Test.Vehicle.ID","FuelEcon")]
ggplot(epa, aes(FuelEcon,Weight)) +
geom_point() +
geom_text(data=subset(epa, FuelEcon > 90),aes(FuelEcon,Weight,label=Model), vjust=-.5, hjust=.10)
View(filter(epa,   Test.Procedure.Description == "Charge Depleting Highway" | Test.Procedure.Description == "Charge Depleting UDDS"))
epa <- filter(epa,   Test.Procedure.Description != "Charge Depleting Highway" & Test.Procedure.Description != "Charge Depleting UDDS")
ggplot(epa,aes(FuelEcon,Weight))+
geom_point()
summary(as.factor(epa$Weight))
View(filter(epa,   Represented.Test.Veh.Make == "BENTLEY" & Model == "Continental GT" ))
ggplot(epa,aes(FuelEcon,Weight))+
geom_point()
summary(as.factor(epa$Weight))
View(filter(epa,   Represented.Test.Veh.Make == "BENTLEY" & Model == "Continental GT" ))
table(epa$Test.Procedure.Description)
epa <- filter(epa,   Test.Procedure.Description == "HWFE" )
k<-table(epa$Test.Vehicle.ID)
head(sort(k,decreasing = TRUE))
View(filter(epa, epa$Test.Vehicle.ID == "53XECSE012"))
k1<-filter(epa, epa$Test.Vehicle.ID == "53XECSE012")
table(k1$Model,k1$Test.Fuel.Type.Description)
table(k1$Test.Fuel.Type.Description,round(k1$FuelEcon))
View(filter(epa, epa$Test.Vehicle.ID == "53XECSE012"))
View(filter(epa, epa$Police...Emergency.Vehicle. == "Y"))
# Police
View(filter(epa, epa$Police...Emergency.Vehicle. != "Y"))
table(epa$Police...Emergency.Vehicle.)
epa <- filter(epa,epa$Police...Emergency.Vehicle. != "Y" )
View(epa)
View(epa)
View(filter(epa, epa$Test.Vehicle.ID == "53XECSE012"))
k<- (filter(epa, epa$Test.Vehicle.ID == "53XECSE012"))
k
distonct(k)
distinct(k)
distinct(k,Represented.Test.Veh.Make)
distinct(k,Represented.Test.Veh.Make, .keep_all = TRUE)
names(k)
distinct(k,Vehicle.Manufacturer.Name,Represented.Test.Veh.Make, .keep_all = TRUE)
names(k)
distinct(k,Vehicle.Manufacturer.Name
,Represented.Test.Veh.Make
, .keep_all = TRUE)
names(k)
distinct(k,Vehicle.Manufacturer.Name
,"Veh.Mfr.Code"
,Represented.Test.Veh.Make
, .keep_all = TRUE)
distinct(k,Vehicle.Manufacturer.Name
,Veh.Mfr.Code
,Represented.Test.Veh.Make
,Model
,Test.Vehicle.ID
,Test.Veh.Configuration..
,Test.Veh.Displacement..L.
, .keep_all = TRUE)
distinct(k,Vehicle.Manufacturer.Name
,Veh.Mfr.Code
,Represented.Test.Veh.Make
,Model
,Test.Vehicle.ID
,Test.Veh.Configuration..
,Test.Veh.Displacement..L.
,Weight
, .keep_all = TRUE)
distinct(k,Vehicle.Manufacturer.Name
,Veh.Mfr.Code
,Represented.Test.Veh.Make
,Model
,Test.Vehicle.ID
,Test.Veh.Configuration..
,Test.Veh.Displacement..L.
,Drive.System.Description
,Weight
, .keep_all = TRUE)
names(k)
distinct(k,Vehicle.Manufacturer.Name
,Veh.Mfr.Code
,Represented.Test.Veh.Make
,Model
,Test.Vehicle.ID
,Test.Veh.Configuration..
,Test.Veh.Displacement..L.
,Drive.System.Description
,Weight
,Test.Fuel.Type.Cd
, .keep_all = TRUE)
distinct(epa,Vehicle.Manufacturer.Name
,Veh.Mfr.Code
,Represented.Test.Veh.Make
,Model
,Test.Vehicle.ID
,Test.Veh.Configuration..
,Test.Veh.Displacement..L.
,Drive.System.Description
,Weight
,Test.Fuel.Type.Cd
, .keep_all = TRUE)
View(distinct(epa,Vehicle.Manufacturer.Name
,Test.Vehicle.ID
,Test.Vehicle.ID
,Test.Veh.Configuration..
View(distinct(epa,Vehicle.Manufacturer.Name
,Veh.Mfr.Code
,Represented.Test.Veh.Make
,Model
,Test.Vehicle.ID
,Test.Veh.Configuration..
,Test.Veh.Displacement..L.
,Drive.System.Description
,Weight
,Test.Fuel.Type.Cd
, .keep_all = TRUE) )
View(distinct(epa,Vehicle.Manufacturer.Name
,Veh.Mfr.Code
,Represented.Test.Veh.Make
,Model
,Test.Vehicle.ID
,Test.Veh.Configuration..
,Test.Veh.Displacement..L.
,Drive.System.Description
,Weight
,Test.Fuel.Type.Cd
, .keep_all = TRUE) )
View(distinct(epa,Vehicle.Manufacturer.Name
,Veh.Mfr.Code
,Represented.Test.Veh.Make
,Model
,Test.Vehicle.ID
,Test.Veh.Displacement..L.
,Drive.System.Description
,Weight
,Test.Fuel.Type.Cd
, .keep_all = TRUE) )
View(distinct(epa,Vehicle.Manufacturer.Name
,Veh.Mfr.Code
,Represented.Test.Veh.Make
,Model
,Test.Vehicle.ID
,Test.Veh.Displacement..L.
,Drive.System.Description
,AxelRatio
,Weight
,Test.Fuel.Type.Cd
, .keep_all = TRUE) )
epa <- (distinct(epa,Vehicle.Manufacturer.Name
,Veh.Mfr.Code
,Represented.Test.Veh.Make
,Model
,Test.Vehicle.ID
,Test.Veh.Displacement..L.
,Drive.System.Description
,AxelRatio
,Weight
,Test.Fuel.Type.Cd
, .keep_all = TRUE) )
View(epa)
View(epa)
names(epa)
epa[c(10,11,12,14,16,18,22,23,36,46)]
epa[c(4,510,11,12,14,16,18,22,23,36,46)]
epa[c(4,5,10,11,12,14,16,18,22,23,36,46)]
View(epa[c(4,5,10,11,12,14,16,18,22,23,36,46)])
View(epa[c(10,11,12,14,16,18,22,23,36,46)])
View(epa[c(10,11,12,14,15,16,18,21,22,23,36,46)])
names(epa)
View(epa[c(10,11,12,14,15,16,18,22,23,36,46)])
View(epa[c(10,11,12,14,15,16,18,22,23,36,46)])
names(epa)
View(epa[c(10,11,12,14,15,16,18,22,23,36,37,46)])
epaMpg <- epa[c(10,11,12,14,15,16,18,22,23,36,37,46)]
View(epaMpg)
View(epaMpg)
View(epa)
View(epa)
# trim down the columns for the mdel training set
View(epa[c(4,5,10,11,12,14,15,16,18,22,23,36,37,46)])
epaMpg <- epa[c(4,5,10,11,12,14,15,16,18,22,23,36,37,46)]
epaMpg$Cylinders <- as.factor(epaMpg$Cylinders)
names(epaMpg)
epaMpg$Tested.Transmission.Type.Code <- as.factor(epaMpg$Tested.Transmission.Type.Code)
epaMpg$Gears <- as.factor(epaMpg$Gears)
epaMpg$Test.Fuel.Type.Cd <- as.factor(epaMpg$Test.Fuel.Type.Cd)
epaMpg$Drive.System.Code <- as.factor(epaMpg$Drive.System.Code)
ggpairs()
library(GGally)
ggpairs(epaMpga[c(10,11,12,14,15,16,18,22,36,46)])
ggpairs(epaMpg[c(10,11,12,14,15,16,18,22,36,46)])
epaMpg[c(10,11,12,14,15,16,18,22,36,46)]
ggpairs(epaMpg[c(3:6,8:12,14)])
View(abs(cor(epa[c(11:12,16,22:25,34,36,40:45,48:50,52:60)],epa[46],use="complete.obs")))
View(abs(cor(epa[c(11:12,16,22:25,34,36,40:45,48:50,52:60)],epa[46],use="complete.obs")))
View(cor(epa[c(11:12,16,22:25,34,36,40:45,48:50,52:60)],epa[46],use="complete.obs"))
View(cor(epa[c(3:6)],epaMpg[14],use="complete.obs"))
View(cor(epa[c(4:6)],epaMpg[14],use="complete.obs"))
View(cor(epaMpg[c(4:6)],epaMpg[14],use="complete.obs"))
cor(epaMpg[c(4:6)],epaMpg[14],use="complete.obs")
str(epaMpg)
cor(epaMpg[c(4)],epaMpg[14],use="complete.obs")
cor(epaMpg[c(4:5)],epaMpg[14],use="complete.obs")
View(cor(epa[c(11:12,16,22:25,34,36,40:45,48:50,52:60)],epa[46],use="complete.obs"))
ggpairs(epaMpg[c(3:6,14)])
ggpairs(epaMpg[c(8:12,14)])
names(epaMpg)
epaMpg.1 <- lm(FuelEcon ~ HorsePower + Cylinders + Tested.Transmission.Type.Code + Gears + Drive.System.Code + Weight + AxleRatio + Test.Fuel.Type.Cd,data=epaMpg)
summary(epaMpg.1)
epaMpg <- epa[c(4,5,10,11,12,14,15,16,18,22,23,36,37,46)]
ggpairs(epaMpg[c(3:6,14)])
epaMpg.1 <- lm(FuelEcon ~ HorsePower + Cylinders + Tested.Transmission.Type.Code + Gears + Drive.System.Code + Weight + AxleRatio + Test.Fuel.Type.Cd,data=epaMpg)
summary(epaMpg.1)
options(scipen = 999)
summary(epaMpg.1)
epaMpg$Cylinders <- as.factor(epaMpg$Cylinders)
epaMpg$Tested.Transmission.Type.Code <- as.factor(epaMpg$Tested.Transmission.Type.Code)
epaMpg$Gears <- as.factor(epaMpg$Gears)
epaMpg$Drive.System.Code <- as.factor(epaMpg$Drive.System.Code)
epaMpg$Test.Fuel.Type.Cd <- as.factor(epaMpg$Test.Fuel.Type.Cd)
epaMpg.1 <- lm(FuelEcon ~ HorsePower + Cylinders + Tested.Transmission.Type.Code + Gears + Drive.System.Code + Weight + AxleRatio + Test.Fuel.Type.Cd,data=epaMpg)
summary(epaMpg.1)
AxleRatio <-c(3.55)
Horsepower <- c(395)
Cylinders <- as.factor(c(8))
Tested.Transmission.Type.Code <- as.factor(c(A))
Gears <-as.factor(c(8))
Drive.System.Code <- as.factor(c(4))
Weight <- c(5500)
AxleRatio <-c(3.55)
Test.Fuel.Type.Cd <- c(61)
newcars = data.frame(Horsepower,Cylinders,Tested.Transmission.Type.Code,Gears,Drive.System.Code,Weight,AxleRatio,Test.Fuel.Type.Cd)
Tested.Transmission.Type.Code <- as.factor(c(A))
newcars = data.frame(Horsepower,Cylinders,Tested.Transmission.Type.Code,Gears,Drive.System.Code,Weight,AxleRatio,Test.Fuel.Type.Cd)
Tested.Transmission.Type.Code <- as.factor(c("A"))
newcars = data.frame(Horsepower,Cylinders,Tested.Transmission.Type.Code,Gears,Drive.System.Code,Weight,AxleRatio,Test.Fuel.Type.Cd)
predict(mtcars.7,newdata=newcars,interval="confidence")
predict(epaMpg.1,newdata=newcars,interval="confidence")
HorsePower <- c(395)
newcars = data.frame(HorsePower,Cylinders,Tested.Transmission.Type.Code,Gears,Drive.System.Code,Weight,AxleRatio,Test.Fuel.Type.Cd)
predict(epaMpg.1,newdata=newcars,interval="confidence")
Test.Fuel.Type.Cd <- as.factor(c(61))
newcars = data.frame(HorsePower,Cylinders,Tested.Transmission.Type.Code,Gears,Drive.System.Code,Weight,AxleRatio,Test.Fuel.Type.Cd)
predict(epaMpg.1,newdata=newcars,interval="confidence")
AxleRatio <-c(3.21)
newcars = data.frame(HorsePower,Cylinders,Tested.Transmission.Type.Code,Gears,Drive.System.Code,Weight,AxleRatio,Test.Fuel.Type.Cd)
predict(epaMpg.1,newdata=newcars,interval="confidence")
HorsePower <- c(395,1500)
Cylinders <- as.factor(c(8,16))
Tested.Transmission.Type.Code <- as.factor(c("A","SA"))
Gears <-as.factor(c(8,8))
Drive.System.Code <- as.factor(c(4,"A"))
Weight <- c(5500,4750)
AxleRatio <-c(3.21,3.64)
Test.Fuel.Type.Cd <- as.factor(c(61,61))
newcars = data.frame(HorsePower,Cylinders,Tested.Transmission.Type.Code,Gears,Drive.System.Code,Weight,AxleRatio,Test.Fuel.Type.Cd)
predict(epaMpg.1,newdata=newcars,interval="confidence")
epa <- read.csv("18tstcar.csv",stringsAsFactors=FALSE)
names(epa)[12] <-paste("Cylinders")
names(epa)[46] <-paste("FuelEcon")
colnames(epa)[colnames(epa)=="X..of.Gears"] <- "Gears"
colnames(epa)[colnames(epa)=="Axle.Ratio"] <- "AxleRatio"
epa <- dplyr::rename(epa, HorsePower = "Rated.Horsepower")
epa <- dplyr::rename(epa, Weight = "Equivalent.Test.Weight..lbs..")
epa <- dplyr::rename(epa, Model = "Represented.Test.Veh.Model")
# now that we have a much larger dataset we can do a few visualizations to confirm some prior hypothesis.
ggplot(epa,aes(FuelEcon,Weight))+
geom_point()
filter(epa,   FuelEcon > 9000)
epa[epa$Test.Vehicle.ID == "184HV863DA" ,]
epa[epa$Test.Vehicle.ID == "184HV863DA" ,c("Represented.Test.Veh.Make","Model","Test.Vehicle.ID","FuelEcon")]
# We will remove anything in the dataframe that is not the specific vehicle id,and which has a mpg of less than 9999.
# For some reason on my machine FuelEcon == 10000.0 is not working, i am not sure why at this moment.
# Lets look at what we have with summary, my daframe has 3509 observations or rows
summary(epa$FuelEcon)
NROW(epa)
epa <- (filter(epa, FuelEcon < 9999))
summary(epa$FuelEcon)
NROW(epa)
ggplot(epa,aes(FuelEcon,Weight))+
geom_point()
ggplot(epa, aes(FuelEcon,Weight)) +
geom_point() +
geom_text(data=subset(epa, FuelEcon > 90),aes(FuelEcon,Weight,label=Model), vjust=-.5, hjust=.10)
filter(epa, FuelEcon > 100)
epa[epa$FuelEcon > 100 ,c("Represented.Test.Veh.Make","Model","Test.Vehicle.ID","FuelEcon")]
mean(epa$FuelEcon) + mean(epa$FuelEcon)*2
mean(epa$FuelEcon) - mean(epa$FuelEcon)*2
View(filter(epa,   Test.Procedure.Description == "Charge Depleting Highway" | Test.Procedure.Description == "Charge Depleting UDDS"))
epa <- filter(epa,   Test.Procedure.Description != "Charge Depleting Highway" & Test.Procedure.Description != "Charge Depleting UDDS")
ggplot(epa,aes(FuelEcon,Weight))+
geom_point()
summary(as.factor(epa$Weight))
View(filter(epa,   Represented.Test.Veh.Make == "BENTLEY" & Model == "Continental GT" ))
table(epa$Test.Procedure.Description)
epa <- filter(epa,   Test.Procedure.Description == "US06" )
k<-table(epa$Test.Vehicle.ID)
head(sort(k,decreasing = TRUE))
table(k1$Model,k1$Test.Fuel.Type.Description)
# Remove Police Vehicles
View(filter(epa, epa$Police...Emergency.Vehicle. == "Y"))
table(epa$Police...Emergency.Vehicle.)
epa <- filter(epa,epa$Police...Emergency.Vehicle. != "Y" )
View(distinct(epa,Vehicle.Manufacturer.Name
,Veh.Mfr.Code
,Represented.Test.Veh.Make
,Model
,Test.Vehicle.ID
,Test.Veh.Displacement..L.
,Drive.System.Description
,AxelRatio
,Weight
,Test.Fuel.Type.Cd
, .keep_all = TRUE))
epa <- (distinct(epa,Vehicle.Manufacturer.Name
,Veh.Mfr.Code
,Represented.Test.Veh.Make
,Model
,Test.Vehicle.ID
,Test.Veh.Displacement..L.
,Drive.System.Description
,AxelRatio
,Weight
,Test.Fuel.Type.Cd
, .keep_all = TRUE) )
# trim down the columns for the mdel training set
View(epa[c(4,5,10,11,12,14,15,16,18,22,23,36,37,46)])
epaMpg <- epa[c(4,5,10,11,12,14,15,16,18,22,23,36,37,46)]
names(epaMpg)
epaMpg$Cylinders <- as.factor(epaMpg$Cylinders)
epaMpg$Tested.Transmission.Type.Code <- as.factor(epaMpg$Tested.Transmission.Type.Code)
epaMpg$Gears <- as.factor(epaMpg$Gears)
epaMpg$Drive.System.Code <- as.factor(epaMpg$Drive.System.Code)
epaMpg$Test.Fuel.Type.Cd <- as.factor(epaMpg$Test.Fuel.Type.Cd)
epaMpg.1 <- lm(FuelEcon ~ HorsePower + Cylinders + Tested.Transmission.Type.Code + Gears + Drive.System.Code + Weight + AxleRatio + Test.Fuel.Type.Cd,data=epaMpg)
summary(epaMpg.1)
HorsePower <- c(395,1500)
Cylinders <- as.factor(c(8,16))
Tested.Transmission.Type.Code <- as.factor(c("A","SA"))
Gears <-as.factor(c(8,8))
Drive.System.Code <- as.factor(c(4,"A"))
Weight <- c(5500,4750)
AxleRatio <-c(3.21,3.64)
Test.Fuel.Type.Cd <- as.factor(c(61,61))
newcars = data.frame(HorsePower,Cylinders,Tested.Transmission.Type.Code,Gears,Drive.System.Code,Weight,AxleRatio,Test.Fuel.Type.Cd)
predict(epaMpg.1,newdata=newcars,interval="confidence")
HorsePower <- c(395,1500)
Cylinders <- as.factor(c(8,16))
Tested.Transmission.Type.Code <- as.factor(c("A","SA"))
Gears <-as.factor(c(8,8))
Drive.System.Code <- as.factor(c(4,"A"))
Drive.System.Code <- as.factor(c(4,"A"))
Weight <- c(5500,4750)
AxleRatio <-c(3.21,3.64)
Test.Fuel.Type.Cd <- as.factor(c(61,61))
newcars = data.frame(HorsePower,Cylinders,Tested.Transmission.Type.Code,Gears,Drive.System.Code,Weight,AxleRatio,Test.Fuel.Type.Cd)
predict(epaMpg.1,newdata=newcars,interval="confidence")
View(epaMpg)
View(epaMpg)
# Set working dir if you download this locally
# getwd()
setwd("/Users/Shep/git/SQLShepBlog/data")
epa <- read.csv("18tstcar.csv",stringsAsFactors=FALSE)
names(epa)[12] <-paste("Cylinders")
names(epa)[46] <-paste("FuelEcon")
colnames(epa)[colnames(epa)=="X..of.Gears"] <- "Gears"
colnames(epa)[colnames(epa)=="Axle.Ratio"] <- "AxleRatio"
epa <- dplyr::rename(epa, HorsePower = "Rated.Horsepower")
epa <- dplyr::rename(epa, Weight = "Equivalent.Test.Weight..lbs..")
epa <- dplyr::rename(epa, Model = "Represented.Test.Veh.Model")
# We will remove anything in the dataframe that is not the specific vehicle id,and which has a mpg of less than 9999.
# For some reason on my machine FuelEcon == 10000.0 is not working, i am not sure why at this moment.
# Lets look at what we have with summary, my daframe has 3509 observations or rows
summary(epa$FuelEcon)
NROW(epa)
epa <- (filter(epa, FuelEcon < 9999))
summary(epa$FuelEcon)
NROW(epa)
ggplot(epa,aes(FuelEcon,Weight))+
geom_point()
ggplot(epa, aes(FuelEcon,Weight)) +
geom_point() +
geom_text(data=subset(epa, FuelEcon > 90),aes(FuelEcon,Weight,label=Model), vjust=-.5, hjust=.10)
filter(epa, FuelEcon > 100)
epa[epa$FuelEcon > 100 ,c("Represented.Test.Veh.Make","Model","Test.Vehicle.ID","FuelEcon")]
mean(epa$FuelEcon) + mean(epa$FuelEcon)*2
mean(epa$FuelEcon) - mean(epa$FuelEcon)*2
View(filter(epa,   Test.Procedure.Description == "Charge Depleting Highway" | Test.Procedure.Description == "Charge Depleting UDDS"))
epa <- filter(epa,   Test.Procedure.Description != "Charge Depleting Highway" & Test.Procedure.Description != "Charge Depleting UDDS")
table(epa$Test.Procedure.Description)
View(epa)
names(epaMpg)
names(epa)
epaMpg <- epa[c(4,5,10,11,12,14,15,16,18,22,23,34,35,36,37,46)]
epaMpg$Cylinders <- as.factor(epaMpg$Cylinders)
epaMpg$Tested.Transmission.Type.Code <- as.factor(epaMpg$Tested.Transmission.Type.Code)
epaMpg$Gears <- as.factor(epaMpg$Gears)
epaMpg$Test.Procedure.Cd <- as.factor(epaMpg$Test.Procedure.Cd)
epaMpg$Drive.System.Code <- as.factor(epaMpg$Drive.System.Code)
epaMpg$Test.Fuel.Type.Cd <- as.factor(epaMpg$Test.Fuel.Type.Cd)
epaMpg.1 <- lm(FuelEcon ~ HorsePower + Cylinders + Tested.Transmission.Type.Code + Gears + Drive.System.Code + Weight + AxleRatio + Test.Procedure.Cd + Test.Fuel.Type.Cd,data=epaMpg)
summary(epaMpg.1)
Test.Procedure.Cd <- as.factor(c("US06","US06"))
HorsePower <- c(395,1500)
Cylinders <- as.factor(c(8,16))
Tested.Transmission.Type.Code <- as.factor(c("A","SA"))
Gears <-as.factor(c(8,8))
Drive.System.Code <- as.factor(c(4,"A"))
Weight <- c(5500,4750)
AxleRatio <-c(3.21,3.64)
Test.Procedure.Cd <- as.factor(c("US06","US06"))
Test.Fuel.Type.Cd <- as.factor(c(61,61))
newcars = data.frame(HorsePower,Cylinders,Tested.Transmission.Type.Code,Gears,Drive.System.Code,Weight,AxleRatio,Test.Procedure.Cd,Test.Fuel.Type.Cd)
predict(epaMpg.1,newdata=newcars,interval="confidence")
View(epaMpg)
Test.Procedure.Cd <- as.factor(c(90,90))
newcars = data.frame(HorsePower,Cylinders,Tested.Transmission.Type.Code,Gears,Drive.System.Code,Weight,AxleRatio,Test.Procedure.Cd,Test.Fuel.Type.Cd)
predict(epaMpg.1,newdata=newcars,interval="confidence")
HorsePower <- c(395,1500,395)
Cylinders <- as.factor(c(8,16.8))
Tested.Transmission.Type.Code <- as.factor(c("A","SA","A"))
Gears <-as.factor(c(8,8,8))
Drive.System.Code <- as.factor(c(4,"A",4))
Weight <- c(5500,4750,5500)
AxleRatio <-c(3.21,3.64,3.21)
Test.Procedure.Cd <- as.factor(c(90,90,3))
Test.Fuel.Type.Cd <- as.factor(c(61,61,61))
newcars = data.frame(HorsePower,Cylinders,Tested.Transmission.Type.Code,Gears,Drive.System.Code,Weight,AxleRatio,Test.Procedure.Cd,Test.Fuel.Type.Cd)
HorsePower <- c(395,1500,395)
Cylinders <- as.factor(c(8,16,8))
Tested.Transmission.Type.Code <- as.factor(c("A","SA","A"))
Gears <-as.factor(c(8,8,8))
Drive.System.Code <- as.factor(c(4,"A",4))
Weight <- c(5500,4750,5500)
AxleRatio <-c(3.21,3.64,3.21)
Test.Procedure.Cd <- as.factor(c(90,90,3))
Test.Fuel.Type.Cd <- as.factor(c(61,61,61))
newcars = data.frame(HorsePower,Cylinders,Tested.Transmission.Type.Code,Gears,Drive.System.Code,Weight,AxleRatio,Test.Procedure.Cd,Test.Fuel.Type.Cd)
predict(epaMpg.1,newdata=newcars,interval="confidence")
Cylinders+ Displacement+ Horsepower+ RearAxleRatio+ Weight+ QuarterMile+ VSengine+ TransmissionAM+ Gears+ Carburetors
##stepwise regression forward
epaMpg.fwd1 <- step(lm(FuelEcon~1,data=epaMpg), direction = "forward",
scope=(~HorsePower + Cylinders + Tested.Transmission.Type.Code + Gears + Drive.System.Code + Weight + AxleRatio + Test.Procedure.Cd + Test.Fuel.Type.Cd))
##stepwise regression forward
epaMpg.fwd1 <- step(lm(FuelEcon~1,data=epaMpg,na.omit), direction = "forward",
scope=(~HorsePower + Cylinders + Tested.Transmission.Type.Code + Gears + Drive.System.Code + Weight + AxleRatio + Test.Procedure.Cd + Test.Fuel.Type.Cd))
##stepwise regression forward
epaMpg.fwd1 <- step(lm(FuelEcon~1,data=epaMpg), direction = "forward",
scope=(~HorsePower + Cylinders + Tested.Transmission.Type.Code + Gears + Drive.System.Code + Weight + AxleRatio + Test.Procedure.Cd + Test.Fuel.Type.Cd))
summary(epaMpg.fwd1)
epaMpg.fwd1
##stepwise regression forward
epaMpg.fwd1 <- step(lm(FuelEcon~1,data=epaMpg), direction = "forward",
scope=(~HorsePower + Cylinders + Tested.Transmission.Type.Code + Gears + Drive.System.Code + Weight + AxleRatio + Test.Procedure.Cd + Test.Fuel.Type.Cd))
summary(epaMpg$Test.Procedure.Cd)
summary(epaMpg$Test.Fuel.Type.Cd)
summary(epaMpg)
View(epaMpg)
##stepwise regression forward
epaMpg.fwd1 <- step(lm(FuelEcon~1,data=epaMpg), direction = "forward",
scope=(~HorsePower  + Tested.Transmission.Type.Code + Gears + Drive.System.Code + Weight + AxleRatio + Test.Procedure.Cd + Test.Fuel.Type.Cd))
summary(epaMpg.fwd1)
epaMpg$Cylinders <- (epaMpg$Cylinders)[is.na]
epaMpg$Cylinders[is.na]
epaMpg[is.na]$Cylinders
is.na(epaMpg$Cylinders)
epaMpg[!is.na(epaMpg$Cylinders,)]
epaMpg[!is.na(epaMpg$Cylinders),]
epaMpg[!is.na(epaMpg$Cylinders)]
epaMpg <- epaMpg[!is.na(epaMpg$Cylinders),]
epaMpg.1 <- lm(FuelEcon ~ HorsePower + Cylinders + Tested.Transmission.Type.Code + Gears + Drive.System.Code + Weight + AxleRatio + Test.Procedure.Cd + Test.Fuel.Type.Cd,data=epaMpg)
summary(epaMpg.1)
##stepwise regression forward
epaMpg.fwd1 <- step(lm(FuelEcon~1,data=epaMpg), direction = "forward",
scope=(~HorsePower + Cylinders + Tested.Transmission.Type.Code + Gears + Drive.System.Code + Weight + AxleRatio + Test.Procedure.Cd + Test.Fuel.Type.Cd))
summary(epaMpg.fwd1)
epaMpg.back1 <- step(lm(FuelEcon ~ HorsePower + Cylinders + Tested.Transmission.Type.Code + Gears + Drive.System.Code + Weight + AxleRatio + Test.Procedure.Cd + Test.Fuel.Type.Cd,data=epaMpg), direction = "backward")
summary(epaMpg.back1)
